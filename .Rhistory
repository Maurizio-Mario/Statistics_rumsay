histogram(length, data = e6,
main = "Histogram of rods",
horizontal = FALSE,
xlab = "Rods")
barchart(~length, data = e6,
main = "Histogram of rods",
horizontal = FALSE,
xlab = "Rods")
barchart(~length, data = e6,
main = "Histogram of rods",
horizontal = FALSE,
xlab = "Rods",
panel.abline(v = 100))
barchart(e6,
main = "Histogram of rods",
horizontal = FALSE,
xlab = "Rods",
panel.abline(v = 100))
barchart(e6,
main = "Histogram of rods",
horizontal = FALSE,
xlab = "Rods",
panel.abline(v = 100))
barchart(e6,
main = "Histogram of rods",
horizontal = FALSE,
xlab = "Rods",
panel.abline(v=median.values))
panel.abline(v=median(e6))
barchart(e6,
main = "Histogram of rods",
horizontal = FALSE,
xlab = "Rods",
panel.abline(v=median(e6))
barchart(e6,
barchart(e6,
main = "Histogram of rods",
horizontal = FALSE,
xlab = "Rods",
panel.abline(v=median(e6)))
barchart(e6$lenght,
main = "Histogram of rods",
horizontal = FALSE,
xlab = "Rods",
panel.abline(v=median(e6)))
barchart(e6$lenght,
main = "Histogram of rods",
xlab = "Rods",
panel.abline(v=median(e6)))
barchart(e6,
main = "Histogram of rods",
xlab = "Rods",
panel.abline(v=median(e6)))
barchart(e6,
main = "Histogram of rods",
xlab = "Rods",
panel.abline(v=median(e6$lenght)))
barchart(e6,
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v=median(e6$lenght)))
e6 <- data.frame(lenght = numeric(rep(seq(from = 99.2, to = 100.6, by = 0.1), c(1, 0, 2, 1, 2, 2, 8, 7, 10, 10, 6, 7, 2, 1, 4))))
e6 <- data.frame(lenght = numeric(rep(seq(from = 99.2, to = 100.6, by = 0.1), c(1, 0, 2, 1, 2, 2, 8, 7, 10, 10, 6, 7, 2, 1, 4))))
e6 <- data.frame(lenght = rep(seq(from = 99.2, to = 100.6, by = 0.1), c(1, 0, 2, 1, 2, 2, 8, 7, 10, 10, 6, 7, 2, 1, 4)))
class(e6$lenght)
class(e6)
barchart(~length, data = e6,
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v=median(e6$lenght)))
class(e6$lenght)
barchart(~length, data = e6,
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v=median(e6$lenght)))
barchart(~length, data = e6,
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v=median(lenght)))
barchart(~length, data = e6,
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v=median(length)))
barchart(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v=median(length)))
barchart(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE)
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE)
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = 100.5))
```
There is a
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = median(e6$lenght)))
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = median(e6$lenght), col = "red"))
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(e6$lenght), col = "red"))
dev.off()
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(e6$lenght), col = "red"))
barchart(e6,
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(e6$lenght), col = "red"))
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(e6$lenght), col = "red"))
dev.off()
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(e6$lenght), col = "red"))
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.grid(h=FALSE, v= 100))
dev.off()
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.grid(h=FALSE, v= 100))
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.grid(h=FALSE, v= 1))
barchart(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.grid(h=FALSE, v= -1))
barchart(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(e6$lenght), col = "red"))
table(e6)
barchart(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(lenght), col = "red"))
barchart(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(length), col = "red"))
e6 <- data.frame(lenght = rep(seq(from = 99.2, to = 100.6, by = 0.1), c(1, 0, 2, 1, 2, 2, 8, 7, 10, 10, 6, 7, 2, 1, 4)))
class(e6$lenght)
barchart(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(length), col = "red"))
barchart(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(length), col = "red")))
dev.off()
e6 <- data.frame(lenght = rep(seq(from = 99.2, to = 100.6, by = 0.1), c(1, 0, 2, 1, 2, 2, 8, 7, 10, 10, 6, 7, 2, 1, 4)))
class(e6$lenght)
barchart(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = mean(length), col = "red")))
barchart(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = median(length), col = "red")))
histogram(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
horizontal = FALSE,
panel.abline(v = median(length), col = "red")))
histogram(~length, data = e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
panel.abline(v = median(length), col = "red")))
histogram(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
panel.abline(v = median(length), col = "red")))
histogram(e6,
type = "count",
main = "Histogram of rods",
xlab = "Rods",
panel.abline(v = median(e6$length), col = "red")))
histogram(e6,
type = "count",
main = "Histogram of rods",
panel.abline(v = median(e6$length), col = "red")))
histogram(e6)
histogram(length, data = e6)
histogram(~length, data = e6)
e6 <- data.frame(lngth = rep(seq(from = 99.2, to = 100.6, by = 0.1), c(1, 0, 2, 1, 2, 2, 8, 7, 10, 10, 6, 7, 2, 1, 4)))
class(e6$lngth)
histogram(~lngth, data = e6)
barchart(~lngth, data = e6)
barchart(e6)
histogram(~lngth, data = e6,
breaks = seq(from = 99.2, to = 100.6, by = 0.1))
type = "count")
histogram(~lngth, data = e6,
breaks = seq(from = 99.2, to = 100.6, by = 0.1),
type = "count")
histogram(~lngth, data = e6,
breaks = seq(from = 99.2, to = 100.6, by = 0.1),
type = "count",
main = "Rods length"
xlab = "Rods")
histogram(~lngth, data = e6,
breaks = seq(from = 99.2, to = 100.6, by = 0.1),
type = "count",
main = "Rods length",
xlab = "Rods")
histogram(~lngth, data = e6,
breaks = seq(from = 99.2, to = 100.6, by = 0.1),
type = "count",
main = "Rods length",
xlab = "Rods",
panel.abline(v = median(lngth), col = "red"))
histogram(~lngth, data = e6,
breaks = seq(from = 99.2, to = 100.6, by = 0.1),
type = "count",
main = "Rods length",
xlab = "Rods",
panel.abline(v = median(e6$lngth), col = "red"))
histogram(~lngth, data = e6,
breaks = seq(from = 99.2, to = 100.6, by = 0.1),
type = "count",
main = "Rods length",
xlab = "Rods",
panel.abline(v = mean(e6$lngth), col = "red"))
str(e6$lngth)
summary(e6$lngth)
library(xtable)
smr <- summary(e6$lngth)
tab <- xtable(summary(smr)$coef, digits=c(0, 2, 2, 1, 2))
smr <- summary(e6$lngth)
tab <- xtable(smr$coef, digits=c(0, 2, 2, 1, 2))
print(tab, type="html")
smr <- summary(e6$lngth)
tab <- xtable(smr)
print(tab, type="html")
tab <- xtable(summary(e6$lngth))
summaryfunction= function (x){
if( is.numeric(x)!=TRUE) {stop("Supplied X is not numeric")}
mysummary = data.frame(
"Min." =as.numeric( min(x)),
"1st Qu." = quantile(x)[2],
"Median" = median(x),
"Mean" = mean(x),
"3rd Qu." = quantile(x)[4],
"Max." = max(x),
row.names=""
)
names(mysummary) = c("Min.","1st Qu.","Median","Mean","3rd Qu.","Max.")
return( mysummary )
}
summaryfunction(e6$lngth)
tabe6 <- xtable(summaryfunction(e6$lngth))
xtable(summary(e6))
xtable(summary(e6$lngth))
kable(summary(e6))
library(knitr)
kable(summary(e6))
kable(summary(e6$lngth), format = "markdown")
kable(summary(e6), format = "pandoc")
kable(summary(e6), format = "markdown")
histogram(~lngth, data = e6,
breaks = seq(from = 99.2, to = 100.6, by = 0.1),
type = "count",
main = "Rods length",
xlab = "Rods",
panel.abline(v = mean(e6)))
histogram(~lngth, data = e6,
breaks = seq(from = 99.2, to = 100.6, by = 0.1),
type = "count",
main = "Rods length",
xlab = "Rods",
panel.abline(v = mean(e6$lngth)))
mean(e6$lngth)
kable(summary(e6), format = "markdown", align = "c", row.names = TRUE)
paste(round((11/1024), 2), "%", "")
1 - (2/1024)
paste(round(1 - (11/1024), 3), "%", "")
paste(round(1 - (11/1024), 3), "%", sep = "")
plot(sample(0:1, 10, replace = TRUE))
barplot(sample(0:1, 10, replace = TRUE))
hist(sample(0:1, 10, replace = TRUE))
par(mfrow = c(2,1))
hist(sample(0:1, 10, replace = TRUE))
par(mfrow = c(2,1))
hist(sample(0:1, 10, replace = TRUE))
par(mfrow = c(2,1))
hist(sample(0:1, 10, replace = TRUE))
dev.off()
set.seed(123)
par(mfrow = c(1, 2))
hist(sample(0:1, 10, replace = TRUE))
hist(sample(0:1, 10, replace = TRUE), xlim = c(0:1))
dev.off()
set.seed(123)
ten_flips <- sample(0:1, 10, replace = TRUE)
par(mfrow = c(1, 2))
ten_fl <- sample(0:1, 10, replace = TRUE)
plot_ten_fl <- hist(ten_fl)
ten_fl <- sample(0:1, 10, replace = TRUE)
plot_ten_fl <- hist(ten_fl)
ten_fl <- sample(0:1, 10, replace = TRUE)
par(mfrow = c(1, 2))
plot_ten_fl <- hist(ten_fl)
dev.off()
set.seed(1234)
ten_fl <- sample(0:1, 10, replace = TRUE)
par(mfrow = c(1, 2))
plot_ten_fl <- hist(ten_fl)
abline(v = mean(ten_fl))
thous_fl <- (sample(0:1, 10000, replace = TRUE))
plot_ten_fl <- hist(thous_fl)
abline(mean(thous_fl))
abline(v = mean(thous_fl))
abline(v = mean(thous_fl), col = "red")
abline(v = mean(ten_fl), col = "red")
dev.off()
par(mfrow = c(1, 2))
plot_ten_fl <- hist(ten_fl, main = "Ten coin flips", xlab = paste("Mean", mean(ten_fl), sep = ""))
abline(v = mean(ten_fl), col = "red")
plot_thous_fl <- hist(thous_fl, main = "10000 coin flips", xlab = paste("Mean", mean(thous_fl), sep = ""))
abline(v = mean(thous_fl), col = "red")
dev.off()
par(mfrow = c(1, 2))
plot_ten_fl <- hist(ten_fl, main = "Ten coin flips", xlab = paste("Mean", mean(ten_fl), sep = " "))
abline(v = mean(ten_fl), col = "red")
plot_thous_fl <- hist(thous_fl, main = "10000 coin flips", xlab = paste("Mean", mean(thous_fl), sep = " "))
abline(v = mean(thous_fl), col = "red")
n <- 1e6
a <- rep(NA_integer_, n)
a[1] <- 100L # set initial value (integer)
i <- 1 # counter
while(a[i] > 0) {
# first check whether our results will fit. If not, embiggenate `a`.
if(i==length(a)) a <- c(a, rep(NA_integer_, n))
if (rbinom(1, 1, 0.1) == 1) {
a[i+1] <- a[i] + 100L
} else {
a[i+1] <- a[i] - 10L
}
i <- i + 1
}
a[seq_len(i)]
plot(a)
a[seq_len(i)]
plot(a[seq_len(i)])
plot(a[seq_len(i)], type = "l")
par(mfrow = c(2, 2))
plot(a[seq_len(i)], type = "l")
plot(a[seq_len(i)], type = "l", main = "Win 0.5")
dev.off()
n <- 1e6
a <- rep(NA_integer_, n)
a[1] <- 100L # set initial value (integer)
i <- 1 # counter
while(a[i] > 0) {
# first check whether our results will fit. If not, embiggenate `a`.
if(i==length(a)) a <- c(a, rep(NA_integer_, n))
if (rbinom(1, 1, 0.5) == 1) {
a[i+1] <- a[i] + 100L
} else {
a[i+1] <- a[i] - 1L
}
i <- i + 1
}
plot(a05)
set.seed(123)
n <- 1e6
a <- rep(NA_integer_, n)
a[1] <- 100L # set initial value (integer)
i <- 1 # counter
while(a[i] > 0) {
# first check whether our results will fit. If not, embiggenate `a`.
if(i==length(a)) a <- c(a, rep(NA_integer_, n))
if (rbinom(1, 1, 0.5) == 1) {
a[i+1] <- a[i] + 100L
} else {
a[i+1] <- a[i] - 1L
}
i <- i + 1
}
plot(a05)
a05 <- a[seq_len(i)]
par(mfrow = c(2, 2))
plot(a05)
n <- 1e6
a <- rep(NA_integer_, n)
a[1] <- 100L # set initial value (integer)
i <- 1 # counter
while(a[i] > 0) {
# first check whether our results will fit. If not, embiggenate `a`.
if(i==length(a)) a <- c(a, rep(NA_integer_, n))
if (rbinom(1, 1, 0.5) == 1) {
a[i+1] <- a[i] + 100L
} else {
a[i+1] <- a[i] - 1L
}
i <- i + 1
}
plot(a[seq_len(i)])
n <- 1e6
a <- rep(NA_integer_, n)
a[1] <- 100L # set initial value (integer)
i <- 1 # counter
while(a[i] > 0) {
# first check whether our results will fit. If not, embiggenate `a`.
if(i==length(a)) a <- c(a, rep(NA_integer_, n))
if (rbinom(1, 1, 0.1) == 1) {
a[i+1] <- a[i] + 100L
} else {
a[i+1] <- a[i] - 1L
}
i <- i + 1
}
plot(a[seq_len(i)])
n <- 1e6
a <- rep(NA_integer_, n)
a[1] <- 100L # set initial value (integer)
i <- 1 # counter
while(a[i] > 0) {
# first check whether our results will fit. If not, embiggenate `a`.
if(i==length(a)) a <- c(a, rep(NA_integer_, n))
if (rbinom(1, 1, 0.01) == 1) {
a[i+1] <- a[i] + 100L
} else {
a[i+1] <- a[i] - 1L
}
i <- i + 1
}
plot(a[seq_len(i)])
plot(a[seq_len(i)], type = "l")
e3 <- data.frame(color = rep(c("brown", "yellow", "red", "blue", "orange", "green"), c(13, 14, 13, 24, 20, 16)))
barchart(~table(color), data = e3,
xlab = "Percentage",
horizontal = FALSE,
main = "Balls (no N)")
library(lattice)
e3 <- data.frame(color = rep(c("brown", "yellow", "red", "blue", "orange", "green"), c(13, 14, 13, 24, 20, 16)))
barchart(~table(color), data = e3,
xlab = "Percentage",
horizontal = FALSE,
main = "Balls (no N)")
